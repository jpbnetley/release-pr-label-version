//#region src/utils/github/add-label-to-pullrequest.ts
/**
* Returns a function that adds a label to a specified pull request using the provided Octokit instance.
*
* @param octokit - An authenticated Octokit instance for interacting with the GitHub API.
* @returns An async function that adds a label to a pull request.
*
* @example
* const addLabel = addLabelToPullRequest(octokit);
* await addLabel({ owner: 'org', repo: 'repo', pullNumber: 123, labels: ['bug'] });
*
* @param params.owner - The owner of the repository.
* @param params.repo - The name of the repository.
* @param params.pullNumber - The number of the pull request to label.
* @param params.labels - The labels to add to the pull request.
*/
function addLabelToPullRequest(octokit) {
	return async function addLabel({ owner, repo, pullNumber, labels }) {
		await octokit.rest.issues.addLabels({
			owner,
			repo,
			issue_number: pullNumber,
			labels
		});
	};
}

//#endregion
export { addLabelToPullRequest };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLWxhYmVsLXRvLXB1bGxyZXF1ZXN0LmpzIiwibmFtZXMiOlsib2N0b2tpdDogT2N0b2tpdCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlscy9naXRodWIvYWRkLWxhYmVsLXRvLXB1bGxyZXF1ZXN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9jdG9raXQgfSBmcm9tICcuLi8uLi90eXBlcy9tb2RlbHMvZ2l0aHViL29jdG9raXQuanMnXG5cbmV4cG9ydCB0eXBlIEFkZExhYmVsVG9QdWxsUmVxdWVzdFBhcmFtcyA9IHtcbiAgb3duZXI6IHN0cmluZ1xuICByZXBvOiBzdHJpbmdcbiAgcHVsbE51bWJlcjogbnVtYmVyXG4gIGxhYmVsczogc3RyaW5nW11cbn1cbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRoYXQgYWRkcyBhIGxhYmVsIHRvIGEgc3BlY2lmaWVkIHB1bGwgcmVxdWVzdCB1c2luZyB0aGUgcHJvdmlkZWQgT2N0b2tpdCBpbnN0YW5jZS5cbiAqXG4gKiBAcGFyYW0gb2N0b2tpdCAtIEFuIGF1dGhlbnRpY2F0ZWQgT2N0b2tpdCBpbnN0YW5jZSBmb3IgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgR2l0SHViIEFQSS5cbiAqIEByZXR1cm5zIEFuIGFzeW5jIGZ1bmN0aW9uIHRoYXQgYWRkcyBhIGxhYmVsIHRvIGEgcHVsbCByZXF1ZXN0LlxuICpcbiAqIEBleGFtcGxlXG4gKiBjb25zdCBhZGRMYWJlbCA9IGFkZExhYmVsVG9QdWxsUmVxdWVzdChvY3Rva2l0KTtcbiAqIGF3YWl0IGFkZExhYmVsKHsgb3duZXI6ICdvcmcnLCByZXBvOiAncmVwbycsIHB1bGxOdW1iZXI6IDEyMywgbGFiZWxzOiBbJ2J1ZyddIH0pO1xuICpcbiAqIEBwYXJhbSBwYXJhbXMub3duZXIgLSBUaGUgb3duZXIgb2YgdGhlIHJlcG9zaXRvcnkuXG4gKiBAcGFyYW0gcGFyYW1zLnJlcG8gLSBUaGUgbmFtZSBvZiB0aGUgcmVwb3NpdG9yeS5cbiAqIEBwYXJhbSBwYXJhbXMucHVsbE51bWJlciAtIFRoZSBudW1iZXIgb2YgdGhlIHB1bGwgcmVxdWVzdCB0byBsYWJlbC5cbiAqIEBwYXJhbSBwYXJhbXMubGFiZWxzIC0gVGhlIGxhYmVscyB0byBhZGQgdG8gdGhlIHB1bGwgcmVxdWVzdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFkZExhYmVsVG9QdWxsUmVxdWVzdChvY3Rva2l0OiBPY3Rva2l0KSB7XG4gIHJldHVybiBhc3luYyBmdW5jdGlvbiBhZGRMYWJlbCh7XG4gICAgb3duZXIsXG4gICAgcmVwbyxcbiAgICBwdWxsTnVtYmVyLFxuICAgIGxhYmVscyxcbiAgfTogQWRkTGFiZWxUb1B1bGxSZXF1ZXN0UGFyYW1zKSB7XG4gICAgYXdhaXQgb2N0b2tpdC5yZXN0Lmlzc3Vlcy5hZGRMYWJlbHMoe1xuICAgICAgb3duZXIsXG4gICAgICByZXBvLFxuICAgICAgaXNzdWVfbnVtYmVyOiBwdWxsTnVtYmVyLFxuICAgICAgbGFiZWxzLFxuICAgIH0pXG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQXVCQSxTQUFnQixzQkFBc0JBLFNBQWtCO0FBQ3RELFFBQU8sZUFBZSxTQUFTLEVBQzdCLE9BQ0EsTUFDQSxZQUNBLFFBQzRCLEVBQUU7RUFDOUIsTUFBTSxRQUFRLEtBQUssT0FBTyxVQUFVO0dBQ2xDO0dBQ0E7R0FDQSxjQUFjO0dBQ2Q7RUFDRCxFQUFDO0NBQ0g7QUFDRiJ9