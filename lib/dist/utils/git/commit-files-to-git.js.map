{"version":3,"file":"commit-files-to-git.js","names":[],"sources":["../../../src/utils/git/commit-files-to-git.ts"],"sourcesContent":["import { info } from '@actions/core'\nimport { exec } from 'node:child_process'\n\nexport type CommitFilesToGitParams = {\n  commitMessage: string\n}\n\n/**\n * Stages the specified files and creates a Git commit with the provided commit message and author information.\n *\n * @param commitMessage - The commit message to use for the Git commit.\n * @param authorName - The name of the commit author.\n * @param authorEmail - The email address of the commit author.\n * @returns A Promise that resolves when the files have been committed, or rejects with an error message if the operation fails.\n */\nexport function commitFilesToGit({\n  commitMessage,\n}: CommitFilesToGitParams): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    exec(`git commit -m \"${commitMessage}\"`, (error, stdout, stderr) => {\n      if (error) {\n        // If nothing to commit, don't treat as fatal error\n        if (stderr.includes('nothing to commit')) {\n          info('No changes to commit.')\n          resolve()\n          return\n        }\n        return reject(`Error committing files: ${stderr || error.message}`)\n      }\n      info(stdout)\n      resolve()\n    })\n  })\n}\n"],"mappings":";;;;;;;;;;;;;AAeA,SAAgB,iBAAiB,EAC/B,eACuB,EAAiB;AACxC,QAAO,IAAI,SAAe,SAAS,WAAW;AAC5C,OAAK,kBAAkB,cAAc,KAAK,OAAO,QAAQ,WAAW;AAClE,OAAI,OAAO;AAET,QAAI,OAAO,SAAS,sBAAsB;AACxC,2BAAK;AACL;AACA;IACD;AACD,WAAO,OAAO,2BAA2B,UAAU,MAAM;GAC1D;AACD,yBAAK;AACL;EACD;CACF;AACF"}