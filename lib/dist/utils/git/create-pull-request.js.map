{"version":3,"file":"create-pull-request.js","names":["createPullRequest"],"sources":["../../../src/utils/git/create-pull-request.ts"],"sourcesContent":["import { setFailed } from '@actions/core'\nimport { Octokit } from '../../types/models/github/octokit.js'\n\nexport type CreatePullRequestParams = {\n  owner: string\n  repo: string\n  title: string\n  head: string\n  base: string\n  body?: string\n}\n/**\n * Creates a function to open a new pull request on a GitHub repository using the provided Octokit instance.\n *\n * @param octokit - An authenticated Octokit instance for interacting with the GitHub API.\n * @returns An async function that creates a pull request with the specified parameters.\n *\n * @example\n * const createPR = createPullRequest(octokit);\n * await createPR('owner', 'repo', 'My PR Title', 'feature-branch', 'main', 'PR description');\n *\n * @throws Will call `setFailed` if the pull request creation fails.\n */\nexport function createPullRequest(octokit: Octokit) {\n  return async function createPullRequest({\n    owner,\n    repo,\n    title,\n    head,\n    base = 'main',\n    body,\n  }: CreatePullRequestParams) {\n    try {\n      const { data: pullRequest } = await octokit.rest.pulls.create({\n        owner,\n        repo,\n        title,\n        head,\n        base,\n        body,\n      })\n\n      return pullRequest\n    } catch (error) {\n      if (error instanceof Error) {\n        setFailed(`Failed to create pull request: ${error.message}`)\n      } else {\n        setFailed('Failed to create pull request: Unknown error')\n      }\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAuBA,SAAgB,kBAAkB,SAAkB;AAClD,QAAO,eAAeA,oBAAkB,EACtC,OACA,MACA,OACA,MACA,OAAO,QACP,MACwB,EAAE;AAC1B,MAAI;GACF,MAAM,EAAE,MAAM,aAAa,GAAG,MAAM,QAAQ,KAAK,MAAM,OAAO;IAC5D;IACA;IACA;IACA;IACA;IACA;IACD;AAED,UAAO;EACR,SAAQ,OAAO;AACd,OAAI,iBAAiB,MACnB,4BAAU,kCAAkC,MAAM;OAElD,4BAAU;EAEb;CACF;AACF"}