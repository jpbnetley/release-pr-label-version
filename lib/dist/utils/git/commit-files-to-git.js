import { exec } from "node:child_process";

//#region src/utils/git/commit-files-to-git.ts
/**
* Stages the specified files and creates a Git commit with the provided commit message and author information.
*
* @param commitMessage - The commit message to use for the Git commit.
* @param authorName - The name of the commit author.
* @param authorEmail - The email address of the commit author.
* @returns A Promise that resolves when the files have been committed, or rejects with an error message if the operation fails.
*/
function commitFilesToGit({ commitMessage, authorEmail, authorName }) {
	return new Promise((resolve, reject) => {
		exec(`git commit -m "${commitMessage}" --author="${authorName} <${authorEmail}>"`, (error) => {
			if (error) return reject(`Error committing files: ${error.message}`);
			resolve();
		});
	});
}

//#endregion
export { commitFilesToGit };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWl0LWZpbGVzLXRvLWdpdC5qcyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXRpbHMvZ2l0L2NvbW1pdC1maWxlcy10by1naXQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXhlYyB9IGZyb20gJ25vZGU6Y2hpbGRfcHJvY2VzcydcblxuZXhwb3J0IHR5cGUgQ29tbWl0RmlsZXNUb0dpdFBhcmFtcyA9IHtcbiAgY29tbWl0TWVzc2FnZTogc3RyaW5nXG4gIGF1dGhvck5hbWU6IHN0cmluZ1xuICBhdXRob3JFbWFpbDogc3RyaW5nXG59XG5cbi8qKlxuICogU3RhZ2VzIHRoZSBzcGVjaWZpZWQgZmlsZXMgYW5kIGNyZWF0ZXMgYSBHaXQgY29tbWl0IHdpdGggdGhlIHByb3ZpZGVkIGNvbW1pdCBtZXNzYWdlIGFuZCBhdXRob3IgaW5mb3JtYXRpb24uXG4gKlxuICogQHBhcmFtIGNvbW1pdE1lc3NhZ2UgLSBUaGUgY29tbWl0IG1lc3NhZ2UgdG8gdXNlIGZvciB0aGUgR2l0IGNvbW1pdC5cbiAqIEBwYXJhbSBhdXRob3JOYW1lIC0gVGhlIG5hbWUgb2YgdGhlIGNvbW1pdCBhdXRob3IuXG4gKiBAcGFyYW0gYXV0aG9yRW1haWwgLSBUaGUgZW1haWwgYWRkcmVzcyBvZiB0aGUgY29tbWl0IGF1dGhvci5cbiAqIEByZXR1cm5zIEEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gdGhlIGZpbGVzIGhhdmUgYmVlbiBjb21taXR0ZWQsIG9yIHJlamVjdHMgd2l0aCBhbiBlcnJvciBtZXNzYWdlIGlmIHRoZSBvcGVyYXRpb24gZmFpbHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb21taXRGaWxlc1RvR2l0KHtcbiAgY29tbWl0TWVzc2FnZSxcbiAgYXV0aG9yRW1haWwsXG4gIGF1dGhvck5hbWUsXG59OiBDb21taXRGaWxlc1RvR2l0UGFyYW1zKTogUHJvbWlzZTx2b2lkPiB7XG4gIHJldHVybiBuZXcgUHJvbWlzZTx2b2lkPigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgZXhlYyhcbiAgICAgIGBnaXQgY29tbWl0IC1tIFwiJHtjb21taXRNZXNzYWdlfVwiIC0tYXV0aG9yPVwiJHthdXRob3JOYW1lfSA8JHthdXRob3JFbWFpbH0+XCJgLFxuICAgICAgKGVycm9yKSA9PiB7XG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgIHJldHVybiByZWplY3QoYEVycm9yIGNvbW1pdHRpbmcgZmlsZXM6ICR7ZXJyb3IubWVzc2FnZX1gKVxuICAgICAgICB9XG4gICAgICAgIHJlc29sdmUoKVxuICAgICAgfVxuICAgIClcbiAgfSlcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFnQkEsU0FBZ0IsaUJBQWlCLEVBQy9CLGVBQ0EsYUFDQSxZQUN1QixFQUFpQjtBQUN4QyxRQUFPLElBQUksUUFBYyxDQUFDLFNBQVMsV0FBVztFQUM1QyxLQUNFLENBQUMsZUFBZSxFQUFFLGNBQWMsWUFBWSxFQUFFLFdBQVcsRUFBRSxFQUFFLFlBQVksRUFBRSxDQUFDLEVBQzVFLENBQUMsVUFBVTtBQUNULE9BQUksTUFDRixRQUFPLE9BQU8sQ0FBQyx3QkFBd0IsRUFBRSxNQUFNLFNBQVMsQ0FBQztHQUUzRCxTQUFTO0VBQ1YsRUFDRjtDQUNGO0FBQ0YifQ==