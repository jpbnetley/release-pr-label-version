{"version":3,"file":"set-git-identity.js","names":["error"],"sources":["../../../src/utils/git/set-git-identity.ts"],"sourcesContent":["import { exec } from 'node:child_process'\n\nexport type SetGitIdentityParams = {\n  name?: string\n  email?: string\n}\n\n/**\n * Sets the Git user identity (name and email) for the current repository.\n *\n * This function executes `git config user.name` and `git config user.email`\n * commands to configure the Git user identity. It returns a Promise that resolves\n * when both commands complete successfully, or rejects with an error message if\n * either command fails.\n *\n * @param name - The Git user name to set.\n * @param email - The Git user email to set.\n * @returns A Promise that resolves when the Git identity is set, or rejects with an error message.\n */\nexport function setGitIdentity({\n  name = 'GitHub Action',\n  email = 'action@github.com',\n}: SetGitIdentityParams = {}): Promise<void> {\n  return new Promise((resolve, reject) => {\n    exec(`git config user.name \"${name}\"`, (error) => {\n      if (error) {\n        reject(`Error setting Git user name: ${error}`)\n        return\n      }\n\n      exec(`git config user.email \"${email}\"`, (error) => {\n        if (error) {\n          reject(`Error setting Git user email: ${error}`)\n          return\n        }\n\n        resolve()\n      })\n    })\n  })\n}\n"],"mappings":";;;;;;;;;;;;;;;AAmBA,SAAgB,eAAe,EAC7B,OAAO,iBACP,QAAQ,qBACa,GAAG,EAAE,EAAiB;AAC3C,QAAO,IAAI,SAAS,SAAS,WAAW;AACtC,OAAK,yBAAyB,KAAK,KAAK,UAAU;AAChD,OAAI,OAAO;AACT,WAAO,gCAAgC;AACvC;GACD;AAED,QAAK,0BAA0B,MAAM,KAAK,YAAU;AAClD,QAAIA,SAAO;AACT,YAAO,iCAAiCA;AACxC;IACD;AAED;GACD;EACF;CACF;AACF"}