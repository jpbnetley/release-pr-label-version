import { ReleaseLabelColors } from "../../release-label-colors-BPbNLS_Y.js";
import { ReleaseLabelDescription } from "../../release-label-description-7oOsOrzD.js";
import { ReleaseLabelName } from "../../release-label-name-D2doBU5r.js";

//#region src/types/models/release-label.d.ts
declare const ReleaseLabel: {
  readonly VersionRequired: {
    readonly name: ReleaseLabelName.VersionRequired;
    readonly description: ReleaseLabelDescription.VersionRequired;
    readonly color: ReleaseLabelColors.VersionRequired;
  };
  readonly VersionPatch: {
    readonly name: ReleaseLabelName.VersionPatch;
    readonly description: ReleaseLabelDescription.VersionPatch;
    readonly color: ReleaseLabelColors.VersionPatch;
  };
  readonly VersionMinor: {
    readonly name: ReleaseLabelName.VersionMinor;
    readonly description: ReleaseLabelDescription.VersionMinor;
    readonly color: ReleaseLabelColors.VersionMinor;
  };
  readonly VersionMajor: {
    readonly name: ReleaseLabelName.VersionMajor;
    readonly description: ReleaseLabelDescription.VersionMajor;
    readonly color: ReleaseLabelColors.VersionMajor;
  };
  readonly VersionSkip: {
    readonly name: ReleaseLabelName.VersionSkip;
    readonly description: ReleaseLabelDescription.VersionSkip;
    readonly color: ReleaseLabelColors.VersionSkip;
  };
  readonly VersionBump: {
    readonly name: ReleaseLabelName.VersionBump;
    readonly description: ReleaseLabelDescription.VersionBump;
    readonly color: ReleaseLabelColors.VersionBump;
  };
  readonly VersionPreRelease: {
    readonly name: ReleaseLabelName.VersionPreRelease;
    readonly describe: ReleaseLabelDescription.VersionPreRelease;
    readonly color: ReleaseLabelColors.VersionPreRelease;
  };
};
type ReleaseLabel = (typeof ReleaseLabel)[keyof typeof ReleaseLabel];
type ReleaseLabelKey = keyof typeof ReleaseLabel;
//#endregion
export { ReleaseLabel, ReleaseLabelKey };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVsZWFzZS1sYWJlbC5kLnRzIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90eXBlcy9tb2RlbHMvcmVsZWFzZS1sYWJlbC5kLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlbGVhc2VMYWJlbENvbG9ycyB9IGZyb20gJy4uL2VudW1zL3JlbGVhc2UtbGFiZWwtY29sb3JzLmpzJztcbmltcG9ydCB7IFJlbGVhc2VMYWJlbERlc2NyaXB0aW9uIH0gZnJvbSAnLi4vZW51bXMvcmVsZWFzZS1sYWJlbC1kZXNjcmlwdGlvbi5qcyc7XG5pbXBvcnQgeyBSZWxlYXNlTGFiZWxOYW1lIH0gZnJvbSAnLi4vZW51bXMvcmVsZWFzZS1sYWJlbC1uYW1lLmpzJztcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IFJlbGVhc2VMYWJlbDoge1xuICAgIHJlYWRvbmx5IFZlcnNpb25SZXF1aXJlZDoge1xuICAgICAgICByZWFkb25seSBuYW1lOiBSZWxlYXNlTGFiZWxOYW1lLlZlcnNpb25SZXF1aXJlZDtcbiAgICAgICAgcmVhZG9ubHkgZGVzY3JpcHRpb246IFJlbGVhc2VMYWJlbERlc2NyaXB0aW9uLlZlcnNpb25SZXF1aXJlZDtcbiAgICAgICAgcmVhZG9ubHkgY29sb3I6IFJlbGVhc2VMYWJlbENvbG9ycy5WZXJzaW9uUmVxdWlyZWQ7XG4gICAgfTtcbiAgICByZWFkb25seSBWZXJzaW9uUGF0Y2g6IHtcbiAgICAgICAgcmVhZG9ubHkgbmFtZTogUmVsZWFzZUxhYmVsTmFtZS5WZXJzaW9uUGF0Y2g7XG4gICAgICAgIHJlYWRvbmx5IGRlc2NyaXB0aW9uOiBSZWxlYXNlTGFiZWxEZXNjcmlwdGlvbi5WZXJzaW9uUGF0Y2g7XG4gICAgICAgIHJlYWRvbmx5IGNvbG9yOiBSZWxlYXNlTGFiZWxDb2xvcnMuVmVyc2lvblBhdGNoO1xuICAgIH07XG4gICAgcmVhZG9ubHkgVmVyc2lvbk1pbm9yOiB7XG4gICAgICAgIHJlYWRvbmx5IG5hbWU6IFJlbGVhc2VMYWJlbE5hbWUuVmVyc2lvbk1pbm9yO1xuICAgICAgICByZWFkb25seSBkZXNjcmlwdGlvbjogUmVsZWFzZUxhYmVsRGVzY3JpcHRpb24uVmVyc2lvbk1pbm9yO1xuICAgICAgICByZWFkb25seSBjb2xvcjogUmVsZWFzZUxhYmVsQ29sb3JzLlZlcnNpb25NaW5vcjtcbiAgICB9O1xuICAgIHJlYWRvbmx5IFZlcnNpb25NYWpvcjoge1xuICAgICAgICByZWFkb25seSBuYW1lOiBSZWxlYXNlTGFiZWxOYW1lLlZlcnNpb25NYWpvcjtcbiAgICAgICAgcmVhZG9ubHkgZGVzY3JpcHRpb246IFJlbGVhc2VMYWJlbERlc2NyaXB0aW9uLlZlcnNpb25NYWpvcjtcbiAgICAgICAgcmVhZG9ubHkgY29sb3I6IFJlbGVhc2VMYWJlbENvbG9ycy5WZXJzaW9uTWFqb3I7XG4gICAgfTtcbiAgICByZWFkb25seSBWZXJzaW9uU2tpcDoge1xuICAgICAgICByZWFkb25seSBuYW1lOiBSZWxlYXNlTGFiZWxOYW1lLlZlcnNpb25Ta2lwO1xuICAgICAgICByZWFkb25seSBkZXNjcmlwdGlvbjogUmVsZWFzZUxhYmVsRGVzY3JpcHRpb24uVmVyc2lvblNraXA7XG4gICAgICAgIHJlYWRvbmx5IGNvbG9yOiBSZWxlYXNlTGFiZWxDb2xvcnMuVmVyc2lvblNraXA7XG4gICAgfTtcbiAgICByZWFkb25seSBWZXJzaW9uQnVtcDoge1xuICAgICAgICByZWFkb25seSBuYW1lOiBSZWxlYXNlTGFiZWxOYW1lLlZlcnNpb25CdW1wO1xuICAgICAgICByZWFkb25seSBkZXNjcmlwdGlvbjogUmVsZWFzZUxhYmVsRGVzY3JpcHRpb24uVmVyc2lvbkJ1bXA7XG4gICAgICAgIHJlYWRvbmx5IGNvbG9yOiBSZWxlYXNlTGFiZWxDb2xvcnMuVmVyc2lvbkJ1bXA7XG4gICAgfTtcbiAgICByZWFkb25seSBWZXJzaW9uUHJlUmVsZWFzZToge1xuICAgICAgICByZWFkb25seSBuYW1lOiBSZWxlYXNlTGFiZWxOYW1lLlZlcnNpb25QcmVSZWxlYXNlO1xuICAgICAgICByZWFkb25seSBkZXNjcmliZTogUmVsZWFzZUxhYmVsRGVzY3JpcHRpb24uVmVyc2lvblByZVJlbGVhc2U7XG4gICAgICAgIHJlYWRvbmx5IGNvbG9yOiBSZWxlYXNlTGFiZWxDb2xvcnMuVmVyc2lvblByZVJlbGVhc2U7XG4gICAgfTtcbn07XG5leHBvcnQgdHlwZSBSZWxlYXNlTGFiZWwgPSAodHlwZW9mIFJlbGVhc2VMYWJlbClba2V5b2YgdHlwZW9mIFJlbGVhc2VMYWJlbF07XG5leHBvcnQgdHlwZSBSZWxlYXNlTGFiZWxLZXkgPSBrZXlvZiB0eXBlb2YgUmVsZWFzZUxhYmVsO1xuIl0sIm1hcHBpbmdzIjoiOzs7OztBQUdBLElBQVcsZUFBZTtDQUFDO09BQVEsaUJBQUE7T0FBQSx3QkFBQTtPQUFBLG1CQUFBO09BQUEsaUJBQUE7T0FBQSx3QkFBQTtPQUFBLG1CQUFBO09BQUEsaUJBQUE7T0FBQSx3QkFBQTtPQUFBLG1CQUFBO09BQUEsaUJBQUE7T0FBQSx3QkFBQTtPQUFBLG1CQUFBO09BQUEsaUJBQUE7T0FBQSx3QkFBQTtPQUFBLG1CQUFBO09BQUEsaUJBQUE7T0FBQSx3QkFBQTtPQUFBLG1CQUFBO09BQUEsaUJBQUE7T0FBQSx3QkFBQTtPQUFBLG1CQUFBO0NBQUE7QUFDbkMsSUFBVyxlQUFlO0NBQUM7T0FBRztPQUFBO0NBQUE7QUFDOUIsSUFBVyxrQkFBa0IsQ0FBQyxTQUFTLGFBQWEifQ==